from fastapi import FastAPI, HTTPException
from sqlalchemy.orm import Session
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker
from sqlalchemy import Column, Integer, String, Enum

# Создаем объект класса FastAPI
app = FastAPI()

# Определяем базовый класс для объявления моделей
Base = declarative_base()

# Определяем модель для данных об актере
class Actor(Base):
    __tablename__ = "actors"

    id = Column(Integer, primary_key=True, index=True)
    actor_id = Column(Integer)
    name = Column(String(20))
    surname = Column(String(20))
    age = Column(Integer)
    sex = Column(Enum("male", "female"))


# Создаем сессию для работы с базой данных
DATABASE_URL = "sqlite:///./cinema.db"
engine = create_engine(DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)


# Функция для получения данных об актере по его ID
def get_actor_by_id(db: Session, actor_id: int):
    return db.query(Actor).filter(Actor.actor_id == actor_id).first()


# Эндпоинт с GET запросом для получения данных об актере по его ID
@app.get("/actors/{actor_id}")
async def get_actor(actor_id: int, db: Session = SessionLocal):
    actor = get_actor_by_id(db, actor_id)
    if actor:
        return actor
    else:
        raise HTTPException(status_code=404, detail="Actor not found")
